// <auto-generated />
using System;
using Agrin.Server.DataBase.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Agrin.Server.DataBase.Migrations
{
    [DbContext(typeof(AgrinContext))]
    [Migration("20180518204643_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rc1-32029")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Agrin.Server.DataBase.Data.FileInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName");

                    b.Property<int>("PostId");

                    b.Property<string>("ServerAddress");

                    b.Property<byte>("Type");

                    b.Property<string>("Version");

                    b.Property<int?>("VersionNumber");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("FileInfo");
                });

            modelBuilder.Entity("Agrin.Server.DataBase.Data.PostCategoryInfoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("PostCategoryInfoes");
                });

            modelBuilder.Entity("Agrin.Server.DataBase.Data.PostCategoryTagInfoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("PostCategoryTagInfoes");
                });

            modelBuilder.Entity("Agrin.Server.DataBase.Data.PostCategoryTagRelationInfoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsHeaderTag");

                    b.Property<int>("PostCategoryId");

                    b.Property<int>("TagId");

                    b.HasKey("Id");

                    b.HasIndex("PostCategoryId");

                    b.HasIndex("TagId");

                    b.ToTable("PostCategoryTagRelationInfoes");
                });

            modelBuilder.Entity("Agrin.Server.DataBase.Data.PostInfoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<DateTime>("LastUpdateDateTime");

                    b.Property<DateTime>("LastUpdateFileVersionDateTime");

                    b.Property<int?>("PostMusicId");

                    b.Property<byte>("PostType");

                    b.Property<int?>("PostVideoId");

                    b.Property<int>("UserId");

                    b.Property<long>("ViewCount");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PostMusicId");

                    b.HasIndex("PostVideoId");

                    b.HasIndex("UserId");

                    b.ToTable("PostInfoes");
                });

            modelBuilder.Entity("Agrin.Server.DataBase.Data.PostSoundInfoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("PostSoundInfoes");
                });

            modelBuilder.Entity("Agrin.Server.DataBase.Data.PostTagRelationInfoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PostId");

                    b.Property<int>("TagId");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTagRelationInfoes");
                });

            modelBuilder.Entity("Agrin.Server.DataBase.Data.PostVideoInfoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("PostVideoInfoes");
                });

            modelBuilder.Entity("Agrin.Server.DataBase.Data.UserInfoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<string>("DisplayName");

                    b.Property<string>("Family");

                    b.Property<string>("Name");

                    b.Property<Guid>("Password");

                    b.Property<byte>("Status");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("UserInfoes");
                });

            modelBuilder.Entity("Agrin.Server.DataBase.Data.FileInfo", b =>
                {
                    b.HasOne("Agrin.Server.DataBase.Data.PostInfoes", "Post")
                        .WithMany("FileInfo")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Agrin.Server.DataBase.Data.PostCategoryTagRelationInfoes", b =>
                {
                    b.HasOne("Agrin.Server.DataBase.Data.PostCategoryInfoes", "PostCategory")
                        .WithMany("PostCategoryTagRelationInfoes")
                        .HasForeignKey("PostCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Agrin.Server.DataBase.Data.PostCategoryTagInfoes", "Tag")
                        .WithMany("PostCategoryTagRelationInfoes")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Agrin.Server.DataBase.Data.PostInfoes", b =>
                {
                    b.HasOne("Agrin.Server.DataBase.Data.PostCategoryInfoes", "Category")
                        .WithMany("PostInfoes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Agrin.Server.DataBase.Data.PostSoundInfoes", "PostMusic")
                        .WithMany("PostInfoes")
                        .HasForeignKey("PostMusicId");

                    b.HasOne("Agrin.Server.DataBase.Data.PostVideoInfoes", "PostVideo")
                        .WithMany("PostInfoes")
                        .HasForeignKey("PostVideoId");

                    b.HasOne("Agrin.Server.DataBase.Data.UserInfoes", "User")
                        .WithMany("PostInfoes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Agrin.Server.DataBase.Data.PostTagRelationInfoes", b =>
                {
                    b.HasOne("Agrin.Server.DataBase.Data.PostInfoes", "Post")
                        .WithMany("PostTagRelationInfoes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Agrin.Server.DataBase.Data.PostCategoryTagInfoes", "Tag")
                        .WithMany("PostTagRelationInfoes")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
