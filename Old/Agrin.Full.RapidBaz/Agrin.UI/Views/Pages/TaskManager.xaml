<UserControl x:Class="Agrin.UI.Views.Pages.TaskManager"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             xmlns:vm="clr-namespace:Agrin.UI.ViewModels.Pages"
             xmlns:ctrl="clr-namespace:Agrin.UI.Views.UserControls"
             d:DesignHeight="500" d:DesignWidth="800" FontFamily="{DynamicResource PersianFontFamilyStyle}"  FlowDirection="{DynamicResource RightToLeftStyle}">
    <UserControl.Resources>
        <!--<vm:AddGroupViewModel x:Key="AddGroupViewModel"/>-->
        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButton2">
            <Grid SnapsToDevicePixels="True">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver"/>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="CheckBackground" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisibleBackground" Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0" >
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Visible</Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="CheckBackground" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="CheckBackground" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0"/>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused"/>
                        <VisualState x:Name="Unfocused" />
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid"/>
                        <VisualState x:Name="InvalidUnfocused"/>
                        <VisualState x:Name="InvalidFocused"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid x:Name="Background" Background="{TemplateBinding Background}">

                </Grid>
                <Grid x:Name="CheckBackground" Background="#ff0a1016" Opacity="0">

                </Grid>
                <Viewbox Margin="7">
                    <Path Data="M 0 0 L 4 5 L 8 0 Z" Fill="{TemplateBinding Foreground}"/>
                </Viewbox>
                <Grid x:Name="DisibleBackground" Background="Black" Opacity="0.5" Visibility="Collapsed">
                </Grid>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="CheckBackground" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="CheckBackground" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid Background="{DynamicResource Blue_ApplicationColors}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="30.0" />
                </Grid.ColumnDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="CheckBackground" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisibleBackground" Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0" >
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Visible</Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="CheckBackground" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="CheckBackground" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid x:Name="Background" Background="{TemplateBinding Background}">

                </Grid>
                <Grid x:Name="CheckBackground" Grid.ColumnSpan="2" Background="#ff0a1016" Opacity="0">

                </Grid>
                <Viewbox Margin="7" Grid.Column="1">
                    <Path Data="M 0 0 L 4 5 L 8 0 Z" Fill="{TemplateBinding Foreground}"/>
                    <!--<Path Data="M8,5L4,0L0,5H8z" Fill="{TemplateBinding Foreground}"/>-->
                </Viewbox>
                <Border Grid.ColumnSpan="2" BorderBrush="{DynamicResource WhiteForeground_ApplicationColors}" BorderThickness="2">

                </Border>
                <Grid x:Name="DisibleBackground" Background="Black" Opacity="0.5" Visibility="Collapsed">
                </Grid>

            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="CheckBackground" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="CheckBackground" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="Foreground" Value="{DynamicResource WhiteForeground_ApplicationColors}"/>
            <Setter Property="Background" Value="{DynamicResource Blue_ApplicationColors}"/>
            <Setter Property="Height" Value="48"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid x:Name="mainGrid">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Editable">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_EditableTextBox">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentSite">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Uneditable" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ToggleButton x:Name="ToggleButton" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="5,5,23,5" VerticalAlignment="Stretch"  HorizontalAlignment="Left">
                            </ContentPresenter>
                            <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left"  VerticalAlignment="Bottom" Margin="5,5,23,5" Focusable="True" Background="Transparent" Visibility="Hidden"  IsReadOnly="{TemplateBinding IsReadOnly}" />
                            <Popup SnapsToDevicePixels="True" HorizontalAlignment="Left" x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                <Grid x:Name="DropDown"  HorizontalAlignment="Left" SnapsToDevicePixels="True" MinWidth="{Binding ActualWidth,ElementName=mainGrid,Mode=OneWay}">
                                    <Border x:Name="DropDownBorder" Background="{DynamicResource Blue_ApplicationColors}" BorderBrush="{DynamicResource WhiteForeground_ApplicationColors}" BorderThickness="2,0,2,2">
                                        <ScrollViewer SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight"  Value="95" />
                            </Trigger>
                            <Trigger Property="IsGrouping"  Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <!--<Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,0,0,0" />
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Foreground" Value="{DynamicResource WhiteForeground_ApplicationColors}"/>
            <Setter Property="Background" Value="{DynamicResource Blue_ApplicationColors}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Border" SnapsToDevicePixels="true"  Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BackgroundGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BackgroundGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Grid x:Name="BackgroundGrid" Visibility="Hidden" Background="#1FFFFFFF">

                                </Grid>
                                <Grid Margin="5,0,5,0">
                                    <ContentPresenter />
                                </Grid>
                            </Grid>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="BackgroundGrid" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <!--<UserControl.DataContext>
        <Binding Source="{StaticResource AddGroupViewModel}"/>
    </UserControl.DataContext>-->
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <StackPanel>
            <TextBlock Text="نام وظیفه:" Style="{DynamicResource LargTextBlockStyle}"/>
            <TextBlock Text="نوع وظیفه:" Style="{DynamicResource LargTextBlockStyle}"/>
            <TextBlock Text="پسوند ها:" Style="{DynamicResource LargTextBlockStyle}"/>
        </StackPanel>
        <StackPanel Grid.Column="1" Margin="10,0,0,0">
            <TextBox Text="{Binding GroupName,UpdateSourceTrigger=PropertyChanged}" Margin="0,5,0,0" SelectionStart="0" Style="{DynamicResource LargTextBoxStyle}" FlowDirection="{DynamicResource RightToLeftStyle}" HorizontalAlignment="Left" MinWidth="200"/>
            <ComboBox Margin="0,10,0,0" HorizontalAlignment="Left" SelectedIndex="0"  Width="200">
                <ComboBox.Items>
                    <TextBlock Text="دانلود" Style="{DynamicResource NormalPersianTextBlockStyle}"/>
                    <TextBlock Text="کاربردی" Style="{DynamicResource NormalPersianTextBlockStyle}"/>
                </ComboBox.Items>
            </ComboBox>
            <TextBox AcceptsReturn="True" Text="{Binding Extentions,UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Top" Margin="0,10,0,0" SelectionStart="0" Style="{DynamicResource LargTextBoxStyle}" FlowDirection="LeftToRight" Height="150" TextWrapping="Wrap"/>
            <TextBlock Text="پسوند ها را با کاراکتر ',' جدا کنید مانند: exe,rar,zip" Margin="0,0,10,0" FontSize="18" Foreground="{DynamicResource WhiteForeground_ApplicationColors}"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" FlowDirection="LeftToRight" Grid.Row="2" Grid.ColumnSpan="2">
            <Button Command="{Binding AddGroupCommand}" Style="{DynamicResource IconButtonStyle}" Content="{DynamicResource PlusNoBorder_TemplateStyle}"/>
            <Button Command="{Binding EditGroupCommand}" Margin="15,0,0,0" Style="{DynamicResource IconButtonStyle}" Content="{DynamicResource Edit_TemplateStyle}"/>
        </StackPanel>
    </Grid>
</UserControl>
