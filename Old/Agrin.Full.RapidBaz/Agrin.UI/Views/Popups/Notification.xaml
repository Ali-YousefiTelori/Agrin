<UserControl x:Class="Agrin.UI.Views.Popups.Notification"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:Agrin.UI.ViewModels.Popups"
             xmlns:cov="clr-namespace:Agrin.ViewModels.Converters;assembly=Agrin.ViewModels"
             xmlns:agn="clr-namespace:Agrin.Download.Web;assembly=Agrin.Download"
             mc:Ignorable="d" 
             d:DesignHeight="35" FontSize="{DynamicResource NormalAFontSizeStyle}" SnapsToDevicePixels="True" d:DesignWidth="130" FontFamily="{DynamicResource PersianFontFamilyStyle}" FlowDirection="{DynamicResource RightToLeftStyle}" Foreground="{DynamicResource WhiteForeground_ApplicationColors}">
    <UserControl.Resources>
        <cov:DateTimeConverter x:Key="DateTimeConverter"/>
        <cov:DateTimeConverter x:Key="TextModeDateTimeConverter" IsTextMode="True"/>
        <vm:NotificationViewModel x:Key="NotificationViewModel"/>
        <Style TargetType="ListBoxItem" x:Key="NormalListBoxItem">
            <Setter Property="Padding" Value="10,0,10,0"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Foreground" Value="{DynamicResource WhiteForeground_ApplicationColors}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="Border" SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Border.Background>
                                <SolidColorBrush Color="Transparent" />
                            </Border.Background>
                            <!--<VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="#ff2e794a" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="#ff2e794a" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>-->
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="1"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Horizontal" Grid.RowSpan="2" VerticalAlignment="Center">
                                    <TextBlock x:Name="txtT" Text="{Binding Text}" Foreground="{DynamicResource GreenNotifyForeground_ApplicationColors}"/>
                                    <TextBlock Margin="5,0,0,0" x:Name="txtV" Text="{Binding Items.Count,StringFormat='({0})'}" FlowDirection="LeftToRight" FontSize="20" FontFamily="{DynamicResource EnglishFontFamilyStyle}" Foreground="{DynamicResource GreenNotifyForeground_ApplicationColors}"/>
                                </StackPanel>
                                <Grid Grid.Column="1" Margin="5,0,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="{Binding NotifyDateTime,Converter={StaticResource TextModeDateTimeConverter}}" FontSize="12"/>
                                    <TextBlock Grid.Row="1" Text="{Binding NotifyDateTime,Converter={StaticResource DateTimeConverter}}" Opacity="0.5" FontSize="10" FontFamily="{DynamicResource EnglishFontFamilyStyle}" FlowDirection="LeftToRight"/>
                                </Grid>
                                <Rectangle Grid.Row="1" Grid.ColumnSpan="2" Margin="-10,0,-10,0" Fill="{DynamicResource BorderLine_ApplicationColors}">
                                </Rectangle>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Path=Mode}" Value="Error">
                                <Setter TargetName="txtT" Property="Foreground" Value="{DynamicResource RedNotifyForeground_ApplicationColors}"/>
                                <Setter TargetName="txtV" Property="Foreground" Value="{DynamicResource RedNotifyForeground_ApplicationColors}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsRead}" Value="True">
                                <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#ff0d0e1b" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <UserControl.DataContext>
        <Binding Source="{StaticResource NotificationViewModel}"/>
    </UserControl.DataContext>
    <Border x:Name="mainBorder" BorderThickness="1,0,1,1" BorderBrush="{DynamicResource Border_ApplicationColors}" Background="{DynamicResource DarkBlue_ApplicationColors}">
        <Grid>
            <Grid x:Name="gridShowAll" Visibility="Collapsed">
                <Button Command="{Binding ShowAllCommand}" Height="auto" Content="نمایش همه" FontSize="{DynamicResource NormalFontSizeStyle}" Padding="20,0,20,0"/>
            </Grid>
            <Grid x:Name="gridNotify">
                <ToggleButton x:Name="btnToggle" Background="{DynamicResource DarkBlue_ApplicationColors}" Height="auto" Padding="10,0,10,0">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="ToggleButton" >
                            <Grid Background="{TemplateBinding Background}">
                                <Grid Margin="{TemplateBinding Padding}" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="رویداد ها" VerticalAlignment="Top" Foreground="{DynamicResource WhiteForeground_ApplicationColors}" />
                                    <TextBlock Margin="5,0,0,0" Text="{Binding NotifyCount,StringFormat='({0})'}" FlowDirection="LeftToRight" Foreground="{DynamicResource YellowForeground_ApplicationColors}" Grid.Column="1" FontSize="20" FontFamily="{DynamicResource EnglishFontFamilyStyle}" VerticalAlignment="Top" />
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
                <Popup x:Name="mainPopUp" MinWidth="{Binding ElementName=mainBorder,Path=ActualWidth}" HorizontalOffset="-1" IsOpen="{Binding ElementName=btnToggle,Path=IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" FlowDirection="{DynamicResource RightToLeftStyle}" Placement="Bottom"  Focusable="True" StaysOpen="False" SnapsToDevicePixels="True" FocusManager.IsFocusScope="False" AllowsTransparency="True">
                    <Grid>
                        <Border BorderThickness="1" FlowDirection="{DynamicResource RightToLeftStyle}" BorderBrush="{DynamicResource Border_ApplicationColors}" Background="{DynamicResource DarkBlue_ApplicationColors}">
                            <ListBox x:Name="mainListBox" SelectedItem="{Binding SelectedItem,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Style="{x:Null}" ItemsSource="{Binding Items}" MaxHeight="190.15">
                                <ListBox.Template>
                                    <ControlTemplate>
                                        <ScrollViewer  Focusable="false" HorizontalScrollBarVisibility="Disabled">
                                            <VirtualizingStackPanel Orientation="Vertical" IsItemsHost="True" Margin="{TemplateBinding Padding}"/>
                                        </ScrollViewer>
                                    </ControlTemplate>
                                </ListBox.Template>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource NormalListBoxItem}">
                                        <EventSetter Event="PreviewMouseUp" Handler="Item_PreviewMouseUp"/>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>
                        </Border>
                        <Grid Width="{Binding ElementName=mainBorder,Path=ActualWidth}" Height="1" VerticalAlignment="Top"  HorizontalAlignment="Left">
                            <Rectangle Fill="{DynamicResource DarkBlue_ApplicationColors}" Margin="1,0,1,0"/>
                        </Grid>
                    </Grid>
                </Popup>
            </Grid>
        </Grid>
    </Border>
</UserControl>
