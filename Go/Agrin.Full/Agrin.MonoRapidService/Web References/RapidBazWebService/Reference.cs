//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
// 
#pragma warning disable 1591

namespace Agrin.MonoRapidService.RapidBazWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="apiwebBinding", Namespace="urn:WSDLapiweb")]
    public partial class WSDLapiwebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CheckFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExtendOperationCompleted;
        
        private System.Threading.SendOrPostCallback FolderGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback FolderListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FolderMakeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FolderRemoveOperationCompleted;
        
        private System.Threading.SendOrPostCallback FolderResetOperationCompleted;
        
        private System.Threading.SendOrPostCallback FreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback MultiQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueueGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueueRemoveOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameOperationCompleted;
        
        private System.Threading.SendOrPostCallback RepairOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback StatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback @__constructOperationCompleted;
        
        private System.Threading.SendOrPostCallback uptimeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WSDLapiwebService() {
            this.Url = "http://rrm.rapidbaz.com/api/web/operate";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CheckFileCompletedEventHandler CheckFileCompleted;
        
        /// <remarks/>
        public event ExtendCompletedEventHandler ExtendCompleted;
        
        /// <remarks/>
        public event FolderGetCompletedEventHandler FolderGetCompleted;
        
        /// <remarks/>
        public event FolderListCompletedEventHandler FolderListCompleted;
        
        /// <remarks/>
        public event FolderMakeCompletedEventHandler FolderMakeCompleted;
        
        /// <remarks/>
        public event FolderRemoveCompletedEventHandler FolderRemoveCompleted;
        
        /// <remarks/>
        public event FolderResetCompletedEventHandler FolderResetCompleted;
        
        /// <remarks/>
        public event FreeCompletedEventHandler FreeCompleted;
        
        /// <remarks/>
        public event GetCompletedEventHandler GetCompleted;
        
        /// <remarks/>
        public event MultiQueueCompletedEventHandler MultiQueueCompleted;
        
        /// <remarks/>
        public event QueueCompletedEventHandler QueueCompleted;
        
        /// <remarks/>
        public event QueueGetCompletedEventHandler QueueGetCompleted;
        
        /// <remarks/>
        public event QueueRemoveCompletedEventHandler QueueRemoveCompleted;
        
        /// <remarks/>
        public event RenameCompletedEventHandler RenameCompleted;
        
        /// <remarks/>
        public event RepairCompletedEventHandler RepairCompleted;
        
        /// <remarks/>
        public event SetFolderCompletedEventHandler SetFolderCompleted;
        
        /// <remarks/>
        public event StatusCompletedEventHandler StatusCompleted;
        
        /// <remarks/>
        public event @__constructCompletedEventHandler @__constructCompleted;
        
        /// <remarks/>
        public event uptimeCompletedEventHandler uptimeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:apiwebAction", RequestNamespace="urn:WSDLapiweb", ResponseNamespace="urn:WSDLapiweb")]
        [return: System.Xml.Serialization.SoapElementAttribute("CheckFileReturn")]
        public string CheckFile(string session, string id) {
            object[] results = this.Invoke("CheckFile", new object[] {
                        session,
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckFileAsync(string session, string id) {
            this.CheckFileAsync(session, id, null);
        }
        
        /// <remarks/>
        public void CheckFileAsync(string session, string id, object userState) {
            if ((this.CheckFileOperationCompleted == null)) {
                this.CheckFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckFileOperationCompleted);
            }
            this.InvokeAsync("CheckFile", new object[] {
                        session,
                        id}, this.CheckFileOperationCompleted, userState);
        }
        
        private void OnCheckFileOperationCompleted(object arg) {
            if ((this.CheckFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckFileCompleted(this, new CheckFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:apiwebAction", RequestNamespace="urn:WSDLapiweb", ResponseNamespace="urn:WSDLapiweb")]
        [return: System.Xml.Serialization.SoapElementAttribute("ExtendReturn")]
        public string Extend(string session1, string id1) {
            object[] results = this.Invoke("Extend", new object[] {
                        session1,
                        id1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExtendAsync(string session1, string id1) {
            this.ExtendAsync(session1, id1, null);
        }
        
        /// <remarks/>
        public void ExtendAsync(string session1, string id1, object userState) {
            if ((this.ExtendOperationCompleted == null)) {
                this.ExtendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExtendOperationCompleted);
            }
            this.InvokeAsync("Extend", new object[] {
                        session1,
                        id1}, this.ExtendOperationCompleted, userState);
        }
        
        private void OnExtendOperationCompleted(object arg) {
            if ((this.ExtendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExtendCompleted(this, new ExtendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:apiwebAction", RequestNamespace="urn:WSDLapiweb", ResponseNamespace="urn:WSDLapiweb")]
        [return: System.Xml.Serialization.SoapElementAttribute("FolderGetReturn")]
        public string FolderGet(string session1, string folder, string limit, string from) {
            object[] results = this.Invoke("FolderGet", new object[] {
                        session1,
                        folder,
                        limit,
                        from});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FolderGetAsync(string session1, string folder, string limit, string from) {
            this.FolderGetAsync(session1, folder, limit, from, null);
        }
        
        /// <remarks/>
        public void FolderGetAsync(string session1, string folder, string limit, string from, object userState) {
            if ((this.FolderGetOperationCompleted == null)) {
                this.FolderGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFolderGetOperationCompleted);
            }
            this.InvokeAsync("FolderGet", new object[] {
                        session1,
                        folder,
                        limit,
                        from}, this.FolderGetOperationCompleted, userState);
        }
        
        private void OnFolderGetOperationCompleted(object arg) {
            if ((this.FolderGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FolderGetCompleted(this, new FolderGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:apiwebAction", RequestNamespace="urn:WSDLapiweb", ResponseNamespace="urn:WSDLapiweb")]
        [return: System.Xml.Serialization.SoapElementAttribute("FolderListReturn")]
        public string FolderList(string session1, string limit1, string from1) {
            object[] results = this.Invoke("FolderList", new object[] {
                        session1,
                        limit1,
                        from1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FolderListAsync(string session1, string limit1, string from1) {
            this.FolderListAsync(session1, limit1, from1, null);
        }
        
        /// <remarks/>
        public void FolderListAsync(string session1, string limit1, string from1, object userState) {
            if ((this.FolderListOperationCompleted == null)) {
                this.FolderListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFolderListOperationCompleted);
            }
            this.InvokeAsync("FolderList", new object[] {
                        session1,
                        limit1,
                        from1}, this.FolderListOperationCompleted, userState);
        }
        
        private void OnFolderListOperationCompleted(object arg) {
            if ((this.FolderListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FolderListCompleted(this, new FolderListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:apiwebAction", RequestNamespace="urn:WSDLapiweb", ResponseNamespace="urn:WSDLapiweb")]
        [return: System.Xml.Serialization.SoapElementAttribute("FolderMakeReturn")]
        public string FolderMake(string session1, string name, string comments, string type) {
            object[] results = this.Invoke("FolderMake", new object[] {
                        session1,
                        name,
                        comments,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FolderMakeAsync(string session1, string name, string comments, string type) {
            this.FolderMakeAsync(session1, name, comments, type, null);
        }
        
        /// <remarks/>
        public void FolderMakeAsync(string session1, string name, string comments, string type, object userState) {
            if ((this.FolderMakeOperationCompleted == null)) {
                this.FolderMakeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFolderMakeOperationCompleted);
            }
            this.InvokeAsync("FolderMake", new object[] {
                        session1,
                        name,
                        comments,
                        type}, this.FolderMakeOperationCompleted, userState);
        }
        
        private void OnFolderMakeOperationCompleted(object arg) {
            if ((this.FolderMakeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FolderMakeCompleted(this, new FolderMakeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:apiwebAction", RequestNamespace="urn:WSDLapiweb", ResponseNamespace="urn:WSDLapiweb")]
        [return: System.Xml.Serialization.SoapElementAttribute("FolderRemoveReturn")]
        public string FolderRemove(object session1, string folderid) {
            object[] results = this.Invoke("FolderRemove", new object[] {
                        session1,
                        folderid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FolderRemoveAsync(object session1, string folderid) {
            this.FolderRemoveAsync(session1, folderid, null);
        }
        
        /// <remarks/>
        public void FolderRemoveAsync(object session1, string folderid, object userState) {
            if ((this.FolderRemoveOperationCompleted == null)) {
                this.FolderRemoveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFolderRemoveOperationCompleted);
            }
            this.InvokeAsync("FolderRemove", new object[] {
                        session1,
                        folderid}, this.FolderRemoveOperationCompleted, userState);
        }
        
        private void OnFolderRemoveOperationCompleted(object arg) {
            if ((this.FolderRemoveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FolderRemoveCompleted(this, new FolderRemoveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:apiwebAction", RequestNamespace="urn:WSDLapiweb", ResponseNamespace="urn:WSDLapiweb")]
        [return: System.Xml.Serialization.SoapElementAttribute("FolderResetReturn")]
        public string FolderReset(string session1, string folderid1) {
            object[] results = this.Invoke("FolderReset", new object[] {
                        session1,
                        folderid1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FolderResetAsync(string session1, string folderid1) {
            this.FolderResetAsync(session1, folderid1, null);
        }
        
        /// <remarks/>
        public void FolderResetAsync(string session1, string folderid1, object userState) {
            if ((this.FolderResetOperationCompleted == null)) {
                this.FolderResetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFolderResetOperationCompleted);
            }
            this.InvokeAsync("FolderReset", new object[] {
                        session1,
                        folderid1}, this.FolderResetOperationCompleted, userState);
        }
        
        private void OnFolderResetOperationCompleted(object arg) {
            if ((this.FolderResetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FolderResetCompleted(this, new FolderResetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:apiwebAction", RequestNamespace="urn:WSDLapiweb", ResponseNamespace="urn:WSDLapiweb")]
        [return: System.Xml.Serialization.SoapElementAttribute("FreeReturn")]
        public string Free(string session1, string id1) {
            object[] results = this.Invoke("Free", new object[] {
                        session1,
                        id1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FreeAsync(string session1, string id1) {
            this.FreeAsync(session1, id1, null);
        }
        
        /// <remarks/>
        public void FreeAsync(string session1, string id1, object userState) {
            if ((this.FreeOperationCompleted == null)) {
                this.FreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFreeOperationCompleted);
            }
            this.InvokeAsync("Free", new object[] {
                        session1,
                        id1}, this.FreeOperationCompleted, userState);
        }
        
        private void OnFreeOperationCompleted(object arg) {
            if ((this.FreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FreeCompleted(this, new FreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:apiwebAction", RequestNamespace="urn:WSDLapiweb", ResponseNamespace="urn:WSDLapiweb")]
        [return: System.Xml.Serialization.SoapElementAttribute("GetReturn")]
        public string Get(string session1, string limit1, string from1) {
            object[] results = this.Invoke("Get", new object[] {
                        session1,
                        limit1,
                        from1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAsync(string session1, string limit1, string from1) {
            this.GetAsync(session1, limit1, from1, null);
        }
        
        /// <remarks/>
        public void GetAsync(string session1, string limit1, string from1, object userState) {
            if ((this.GetOperationCompleted == null)) {
                this.GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationCompleted);
            }
            this.InvokeAsync("Get", new object[] {
                        session1,
                        limit1,
                        from1}, this.GetOperationCompleted, userState);
        }
        
        private void OnGetOperationCompleted(object arg) {
            if ((this.GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompleted(this, new GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:apiwebAction", RequestNamespace="urn:WSDLapiweb", ResponseNamespace="urn:WSDLapiweb")]
        [return: System.Xml.Serialization.SoapElementAttribute("MultiQueueReturn")]
        public string MultiQueue(string session1, string url) {
            object[] results = this.Invoke("MultiQueue", new object[] {
                        session1,
                        url});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MultiQueueAsync(string session1, string url) {
            this.MultiQueueAsync(session1, url, null);
        }
        
        /// <remarks/>
        public void MultiQueueAsync(string session1, string url, object userState) {
            if ((this.MultiQueueOperationCompleted == null)) {
                this.MultiQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMultiQueueOperationCompleted);
            }
            this.InvokeAsync("MultiQueue", new object[] {
                        session1,
                        url}, this.MultiQueueOperationCompleted, userState);
        }
        
        private void OnMultiQueueOperationCompleted(object arg) {
            if ((this.MultiQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MultiQueueCompleted(this, new MultiQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:apiwebAction", RequestNamespace="urn:WSDLapiweb", ResponseNamespace="urn:WSDLapiweb")]
        [return: System.Xml.Serialization.SoapElementAttribute("QueueReturn")]
        public string Queue(string session1, string url1) {
            object[] results = this.Invoke("Queue", new object[] {
                        session1,
                        url1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueueAsync(string session1, string url1) {
            this.QueueAsync(session1, url1, null);
        }
        
        /// <remarks/>
        public void QueueAsync(string session1, string url1, object userState) {
            if ((this.QueueOperationCompleted == null)) {
                this.QueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueueOperationCompleted);
            }
            this.InvokeAsync("Queue", new object[] {
                        session1,
                        url1}, this.QueueOperationCompleted, userState);
        }
        
        private void OnQueueOperationCompleted(object arg) {
            if ((this.QueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueueCompleted(this, new QueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:apiwebAction", RequestNamespace="urn:WSDLapiweb", ResponseNamespace="urn:WSDLapiweb")]
        [return: System.Xml.Serialization.SoapElementAttribute("QueueGetReturn")]
        public string QueueGet(string session1, string limit1, string from1) {
            object[] results = this.Invoke("QueueGet", new object[] {
                        session1,
                        limit1,
                        from1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueueGetAsync(string session1, string limit1, string from1) {
            this.QueueGetAsync(session1, limit1, from1, null);
        }
        
        /// <remarks/>
        public void QueueGetAsync(string session1, string limit1, string from1, object userState) {
            if ((this.QueueGetOperationCompleted == null)) {
                this.QueueGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueueGetOperationCompleted);
            }
            this.InvokeAsync("QueueGet", new object[] {
                        session1,
                        limit1,
                        from1}, this.QueueGetOperationCompleted, userState);
        }
        
        private void OnQueueGetOperationCompleted(object arg) {
            if ((this.QueueGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueueGetCompleted(this, new QueueGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:apiwebAction", RequestNamespace="urn:WSDLapiweb", ResponseNamespace="urn:WSDLapiweb")]
        [return: System.Xml.Serialization.SoapElementAttribute("QueueRemoveReturn")]
        public string QueueRemove(string session1, string qid) {
            object[] results = this.Invoke("QueueRemove", new object[] {
                        session1,
                        qid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueueRemoveAsync(string session1, string qid) {
            this.QueueRemoveAsync(session1, qid, null);
        }
        
        /// <remarks/>
        public void QueueRemoveAsync(string session1, string qid, object userState) {
            if ((this.QueueRemoveOperationCompleted == null)) {
                this.QueueRemoveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueueRemoveOperationCompleted);
            }
            this.InvokeAsync("QueueRemove", new object[] {
                        session1,
                        qid}, this.QueueRemoveOperationCompleted, userState);
        }
        
        private void OnQueueRemoveOperationCompleted(object arg) {
            if ((this.QueueRemoveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueueRemoveCompleted(this, new QueueRemoveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:apiwebAction", RequestNamespace="urn:WSDLapiweb", ResponseNamespace="urn:WSDLapiweb")]
        [return: System.Xml.Serialization.SoapElementAttribute("RenameReturn")]
        public string Rename(string session1, string id1, string name1) {
            object[] results = this.Invoke("Rename", new object[] {
                        session1,
                        id1,
                        name1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RenameAsync(string session1, string id1, string name1) {
            this.RenameAsync(session1, id1, name1, null);
        }
        
        /// <remarks/>
        public void RenameAsync(string session1, string id1, string name1, object userState) {
            if ((this.RenameOperationCompleted == null)) {
                this.RenameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameOperationCompleted);
            }
            this.InvokeAsync("Rename", new object[] {
                        session1,
                        id1,
                        name1}, this.RenameOperationCompleted, userState);
        }
        
        private void OnRenameOperationCompleted(object arg) {
            if ((this.RenameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameCompleted(this, new RenameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:apiwebAction", RequestNamespace="urn:WSDLapiweb", ResponseNamespace="urn:WSDLapiweb")]
        [return: System.Xml.Serialization.SoapElementAttribute("RepairReturn")]
        public string Repair(string session1, string id1) {
            object[] results = this.Invoke("Repair", new object[] {
                        session1,
                        id1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RepairAsync(string session1, string id1) {
            this.RepairAsync(session1, id1, null);
        }
        
        /// <remarks/>
        public void RepairAsync(string session1, string id1, object userState) {
            if ((this.RepairOperationCompleted == null)) {
                this.RepairOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRepairOperationCompleted);
            }
            this.InvokeAsync("Repair", new object[] {
                        session1,
                        id1}, this.RepairOperationCompleted, userState);
        }
        
        private void OnRepairOperationCompleted(object arg) {
            if ((this.RepairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RepairCompleted(this, new RepairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:apiwebAction", RequestNamespace="urn:WSDLapiweb", ResponseNamespace="urn:WSDLapiweb")]
        [return: System.Xml.Serialization.SoapElementAttribute("SetFolderReturn")]
        public string SetFolder(string session1, string folderid1, string fileid) {
            object[] results = this.Invoke("SetFolder", new object[] {
                        session1,
                        folderid1,
                        fileid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetFolderAsync(string session1, string folderid1, string fileid) {
            this.SetFolderAsync(session1, folderid1, fileid, null);
        }
        
        /// <remarks/>
        public void SetFolderAsync(string session1, string folderid1, string fileid, object userState) {
            if ((this.SetFolderOperationCompleted == null)) {
                this.SetFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetFolderOperationCompleted);
            }
            this.InvokeAsync("SetFolder", new object[] {
                        session1,
                        folderid1,
                        fileid}, this.SetFolderOperationCompleted, userState);
        }
        
        private void OnSetFolderOperationCompleted(object arg) {
            if ((this.SetFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetFolderCompleted(this, new SetFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:apiwebAction", RequestNamespace="urn:WSDLapiweb", ResponseNamespace="urn:WSDLapiweb")]
        [return: System.Xml.Serialization.SoapElementAttribute("StatusReturn")]
        public string Status(string session1, string qid1) {
            object[] results = this.Invoke("Status", new object[] {
                        session1,
                        qid1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StatusAsync(string session1, string qid1) {
            this.StatusAsync(session1, qid1, null);
        }
        
        /// <remarks/>
        public void StatusAsync(string session1, string qid1, object userState) {
            if ((this.StatusOperationCompleted == null)) {
                this.StatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStatusOperationCompleted);
            }
            this.InvokeAsync("Status", new object[] {
                        session1,
                        qid1}, this.StatusOperationCompleted, userState);
        }
        
        private void OnStatusOperationCompleted(object arg) {
            if ((this.StatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StatusCompleted(this, new StatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:apiwebAction", RequestNamespace="urn:WSDLapiweb", ResponseNamespace="urn:WSDLapiweb")]
        [return: System.Xml.Serialization.SoapElementAttribute("__constructReturn", DataType="integer")]
        public string @__construct(string x1) {
            object[] results = this.Invoke("__construct", new object[] {
                        x1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void @__constructAsync(string x1) {
            this.@__constructAsync(x1, null);
        }
        
        /// <remarks/>
        public void @__constructAsync(string x1, object userState) {
            if ((this.@__constructOperationCompleted == null)) {
                this.@__constructOperationCompleted = new System.Threading.SendOrPostCallback(this.On__constructOperationCompleted);
            }
            this.InvokeAsync("__construct", new object[] {
                        x1}, this.@__constructOperationCompleted, userState);
        }
        
        private void On__constructOperationCompleted(object arg) {
            if ((this.@__constructCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.@__constructCompleted(this, new @__constructCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:apiwebAction", RequestNamespace="urn:WSDLapiweb", ResponseNamespace="urn:WSDLapiweb")]
        [return: System.Xml.Serialization.SoapElementAttribute("uptimeReturn")]
        public string uptime() {
            object[] results = this.Invoke("uptime", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void uptimeAsync() {
            this.uptimeAsync(null);
        }
        
        /// <remarks/>
        public void uptimeAsync(object userState) {
            if ((this.uptimeOperationCompleted == null)) {
                this.uptimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuptimeOperationCompleted);
            }
            this.InvokeAsync("uptime", new object[0], this.uptimeOperationCompleted, userState);
        }
        
        private void OnuptimeOperationCompleted(object arg) {
            if ((this.uptimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uptimeCompleted(this, new uptimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CheckFileCompletedEventHandler(object sender, CheckFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ExtendCompletedEventHandler(object sender, ExtendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExtendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExtendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void FolderGetCompletedEventHandler(object sender, FolderGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FolderGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FolderGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void FolderListCompletedEventHandler(object sender, FolderListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FolderListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FolderListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void FolderMakeCompletedEventHandler(object sender, FolderMakeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FolderMakeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FolderMakeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void FolderRemoveCompletedEventHandler(object sender, FolderRemoveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FolderRemoveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FolderRemoveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void FolderResetCompletedEventHandler(object sender, FolderResetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FolderResetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FolderResetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void FreeCompletedEventHandler(object sender, FreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetCompletedEventHandler(object sender, GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void MultiQueueCompletedEventHandler(object sender, MultiQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MultiQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MultiQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void QueueCompletedEventHandler(object sender, QueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void QueueGetCompletedEventHandler(object sender, QueueGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueueGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueueGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void QueueRemoveCompletedEventHandler(object sender, QueueRemoveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueueRemoveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueueRemoveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void RenameCompletedEventHandler(object sender, RenameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void RepairCompletedEventHandler(object sender, RepairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RepairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RepairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SetFolderCompletedEventHandler(object sender, SetFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void StatusCompletedEventHandler(object sender, StatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void @__constructCompletedEventHandler(object sender, @__constructCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class @__constructCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal @__constructCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void uptimeCompletedEventHandler(object sender, uptimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uptimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uptimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591