<UserControl x:Class="Agrin.Windows.UI.Views.Controls.AutoCompleteTextBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:converter="clr-namespace:Agrin.ViewModels.Converters;assembly=Agrin.ViewModels"
             xmlns:converter2="clr-namespace:System.Windows.Controls;assembly=PresentationFramework"
             mc:Ignorable="d" 
             d:DesignHeight="26" d:DesignWidth="300" PreviewKeyDown="UserControl_KeyDown" FontFamily="{DynamicResource PersianFontFamilyStyle}" x:Name="mainControl" >
    <UserControl.Resources>
        <converter:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <converter2:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </UserControl.Resources>
    <Grid>
        <Border DataContext="{Binding ElementName=mainPopUp}" x:Name="mainBorder" BorderBrush="#c5c5c5" BorderThickness="1" CornerRadius="3">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <TextBox IsReadOnly="{Binding IsReadOnlyText,ElementName=mainControl}" Focusable="{Binding IsReadOnlyText,ElementName=mainControl,Converter={StaticResource InverseBooleanConverter}}" Height="auto" Width="auto" x:Name="maintextBox" Text="{Binding Text,ElementName=mainControl,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" TextChanged="maintextBox_TextChanged" PreviewKeyDown="maintextBox_KeyDown">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
                            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="Background" Value="{DynamicResource WhiteForeground_ApplicationColors}"/>
                            <Setter Property="Foreground" Value="#5a5a5a"/>
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="AllowDrop" Value="true" />
                            <Setter Property="Padding" Value="3"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                            <Setter Property="FontFamily" Value="{DynamicResource EnglishFontFamilyStyle}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                        <Grid>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal" />
                                                    <VisualState x:Name="Disabled">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disibleBorder" Storyboard.TargetProperty="Visibility" Duration="0">
                                                                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlLightColor}" />
                                            </ColorAnimationUsingKeyFrames>-->
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="ReadOnly">
                                                        <Storyboard>
                                                            <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>-->
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="MouseOver" >

                                                    </VisualState>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="ValidationStates">
                                                    <VisualState x:Name="Valid"/>
                                                    <VisualState x:Name="InvalidUnfocused">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                    <DiscreteObjectKeyFrame.Value>
                                                                        <Visibility>Visible</Visibility>
                                                                    </DiscreteObjectKeyFrame.Value>
                                                                </DiscreteObjectKeyFrame>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="InvalidFocused">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                    <DiscreteObjectKeyFrame.Value>
                                                                        <Visibility>Visible</Visibility>
                                                                    </DiscreteObjectKeyFrame.Value>
                                                                </DiscreteObjectKeyFrame>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                                                <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                                                            </BooleanAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Border Name="Border" CornerRadius="3,0,0,3" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                                                <Grid>
                                                    <ScrollViewer Margin="0,0,0,0" x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}"/>
                                                    <Border CornerRadius="3,0,0,3" x:Name="disibleBorder" Background="White" Visibility="Collapsed" Opacity="0.7"/>
                                                </Grid>
                                            </Border>

                                            <Border x:Name="ValidationErrorElement" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="#ffee3200" Visibility="Collapsed">

                                            </Border>
                                            <!--<StackPanel Orientation="Horizontal" DataContext="{TemplateBinding Tag}" Margin="3">
                                                <ContentControl Template="{Binding Tag}" Foreground="#5a5a5a"/>
                                                <TextBlock x:Name="txtCue" Visibility="Collapsed" Foreground="#a7a7a7" FontSize="{TemplateBinding FontSize}" FontFamily="{DynamicResource PersianFontFamilyStyle}" Text="{Binding Text}" VerticalAlignment="Center" Margin="5,0,0,0"/>
                                            </StackPanel>-->
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <!--<Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                                <Setter TargetName="txtCue" Property="Visibility" Value="Visible" />
                                            </Trigger>
                                            <Trigger Property="Text" Value="{x:Null}">
                                                <Setter  TargetName="txtCue" Property="Visibility" Value="Visible" />
                                            </Trigger>-->
                                            <Trigger Property="IsKeyboardFocused" Value="True">
                                                <!--<Setter TargetName="txtCue" Property="Visibility" Value="Collapsed" />-->
                                                <Setter TargetName="Border" Property="BorderBrush" Value="#545454"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Border" Property="BorderBrush" Value="#545454"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu FlowDirection="{DynamicResource RightToLeftStyle}">
                                        <MenuItem Header="برش" Command="Cut"/>
                                        <MenuItem Header="کپی" Command="Copy"/>
                                        <MenuItem Header="درج" Command="Paste"/>
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <Border x:Name="readOnlyBorder" Background="#01ffffff" Opacity="0.001" MouseLeftButtonUp="readOnlyBorder_MouseLeftButtonUp" Visibility="{Binding IsReadOnlyText,ElementName=mainControl,Converter={StaticResource BooleanToVisibilityConverter}}">
                </Border>
                <ToggleButton x:Name="mainToggle" Grid.Column="1" Width="{Binding ElementName=mainControl,Path=OpenerWidth}" IsChecked="{Binding ElementName=mainPopUp,Path=IsOpen,Mode=OneWay}" Click="mainToggle_Click">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Setter Property="Foreground" Value="#4a4a45"/>
                            <Setter Property="Background" >
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#f9f9f9" Offset="0"/>
                                        <GradientStop Color="#ececec" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Grid SnapsToDevicePixels="True">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="MouseOver"/>
                                                    <VisualState x:Name="Pressed">
                                                        <!--<Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="CheckBackground" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1"/>
                                                        </Storyboard>-->
                                                    </VisualState>
                                                    <VisualState x:Name="Disabled">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisibleBackground" Storyboard.TargetProperty="Visibility">
                                                                <DiscreteObjectKeyFrame KeyTime="0" >
                                                                    <DiscreteObjectKeyFrame.Value>
                                                                        <Visibility>Visible</Visibility>
                                                                    </DiscreteObjectKeyFrame.Value>
                                                                </DiscreteObjectKeyFrame>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="CheckStates">
                                                    <VisualState x:Name="Checked">
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="CheckBackground" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Unchecked">
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="CheckBackground" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="FocusStates">
                                                    <VisualState x:Name="Focused"/>
                                                    <VisualState x:Name="Unfocused" />
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="ValidationStates">
                                                    <VisualState x:Name="Valid"/>
                                                    <VisualState x:Name="InvalidUnfocused"/>
                                                    <VisualState x:Name="InvalidFocused"/>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Border x:Name="Background" CornerRadius="0,3,3,0" BorderThickness="1,0,0,0" BorderBrush="#c5c5c5" Background="{TemplateBinding Background}">

                                            </Border>
                                            <Border x:Name="CheckBackground" CornerRadius="0,3,3,0" BorderThickness="1,0,0,0" Opacity="0" BorderBrush="#c5c5c5">
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="#ececec" Offset="0"/>
                                                        <GradientStop Color="#f9f9f9" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                            <!--<Viewbox Margin="7">
                                                <Path Data="M 0 0 L 4 5 L 8 0 Z" Fill="{TemplateBinding Foreground}"/>
                                            </Viewbox>-->
                                            <ContentControl Margin="6" Template="{DynamicResource DownArrow_TemplateStyle}"/>
                                            <Grid x:Name="DisibleBackground" Background="White" Opacity="0.5" Visibility="Collapsed">
                                            </Grid>
                                        </Grid>
                                        <!--<ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="CheckBackground" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="CheckBackground" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.ExitActions>
                                            </Trigger>
                                        </ControlTemplate.Triggers>-->
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
            </Grid>
        </Border>
        <Popup x:Name="mainPopUp" VerticalOffset="-3" Focusable="True" Closed="mainPopUp_Closed" StaysOpen="False" SnapsToDevicePixels="True" FocusManager.IsFocusScope="False" AllowsTransparency="True" Loaded="mainPopUp_Loaded">
            <Border Background="#ededed" SnapsToDevicePixels="True" BorderBrush="#c5c5c5" BorderThickness="1" CornerRadius="0,0,3,3" MaxHeight="200" MinWidth="{Binding ActualWidth,ElementName=mainBorder}">
                <ListBox BorderThickness="0" FocusVisualStyle="{x:Null}"  Background="Transparent"  x:Name="mainListBox" Height="auto"  MouseLeftButtonUp="mainListBox_MouseLeftButtonUp"  ItemTemplate="{Binding ItemTemplate,ElementName=mainControl}" SelectedItem="{Binding SelectedItem,ElementName=mainControl}" Style="{x:Null}" FontSize="{Binding ElementName=mainControl,Path=FontSize}">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            <Setter Property="Foreground" Value="{DynamicResource WhiteForeground_ApplicationColors}"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </Border>
        </Popup>
    </Grid>
</UserControl>
